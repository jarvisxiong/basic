<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.duantuke.basic.mappers.RoomTypeMapper" >
  <resultMap id="BaseResultMap" type="com.duantuke.basic.po.RoomType" >
    <id column="roomtype_id" property="roomtypeId" jdbcType="BIGINT" />
    <result column="room_num" property="roomNum" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="bedtype" property="bedtype" jdbcType="INTEGER" />
    <result column="bedsize" property="bedsize" jdbcType="INTEGER" />
    <result column="area" property="area" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    roomtype_id, room_num, type, bedtype, bedsize, area, create_time, create_by, update_time, 
    update_by
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.duantuke.basic.po.RoomTypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from room_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from room_type
    where roomtype_id = #{roomtypeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from room_type
    where roomtype_id = #{roomtypeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.duantuke.basic.po.RoomTypeExample" >
    delete from room_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duantuke.basic.po.RoomType" >
    insert into room_type (roomtype_id, room_num, type, 
      bedtype, bedsize, area, 
      create_time, create_by, update_time, 
      update_by)
    values (#{roomtypeId,jdbcType=BIGINT}, #{roomNum,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{bedtype,jdbcType=INTEGER}, #{bedsize,jdbcType=INTEGER}, #{area,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.duantuke.basic.po.RoomType" >
    insert into room_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roomtypeId != null" >
        roomtype_id,
      </if>
      <if test="roomNum != null" >
        room_num,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="bedtype != null" >
        bedtype,
      </if>
      <if test="bedsize != null" >
        bedsize,
      </if>
      <if test="area != null" >
        area,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roomtypeId != null" >
        #{roomtypeId,jdbcType=BIGINT},
      </if>
      <if test="roomNum != null" >
        #{roomNum,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="bedtype != null" >
        #{bedtype,jdbcType=INTEGER},
      </if>
      <if test="bedsize != null" >
        #{bedsize,jdbcType=INTEGER},
      </if>
      <if test="area != null" >
        #{area,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duantuke.basic.po.RoomTypeExample" resultType="java.lang.Integer" >
    select count(*) from room_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update room_type
    <set >
      <if test="record.roomtypeId != null" >
        roomtype_id = #{record.roomtypeId,jdbcType=BIGINT},
      </if>
      <if test="record.roomNum != null" >
        room_num = #{record.roomNum,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.bedtype != null" >
        bedtype = #{record.bedtype,jdbcType=INTEGER},
      </if>
      <if test="record.bedsize != null" >
        bedsize = #{record.bedsize,jdbcType=INTEGER},
      </if>
      <if test="record.area != null" >
        area = #{record.area,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update room_type
    set roomtype_id = #{record.roomtypeId,jdbcType=BIGINT},
      room_num = #{record.roomNum,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      bedtype = #{record.bedtype,jdbcType=INTEGER},
      bedsize = #{record.bedsize,jdbcType=INTEGER},
      area = #{record.area,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duantuke.basic.po.RoomType" >
    update room_type
    <set >
      <if test="roomNum != null" >
        room_num = #{roomNum,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="bedtype != null" >
        bedtype = #{bedtype,jdbcType=INTEGER},
      </if>
      <if test="bedsize != null" >
        bedsize = #{bedsize,jdbcType=INTEGER},
      </if>
      <if test="area != null" >
        area = #{area,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where roomtype_id = #{roomtypeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duantuke.basic.po.RoomType" >
    update room_type
    set room_num = #{roomNum,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      bedtype = #{bedtype,jdbcType=INTEGER},
      bedsize = #{bedsize,jdbcType=INTEGER},
      area = #{area,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where roomtype_id = #{roomtypeId,jdbcType=BIGINT}
  </update>
</mapper>