<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.duantuke.basic.mappers.MealRankMapper" >
  <resultMap id="BaseResultMap" type="com.duantuke.basic.po.MealRank" >
    <id column="meal_rank_id" property="mealRankId" jdbcType="BIGINT" />
    <result column="meal_id" property="mealId" jdbcType="BIGINT" />
    <result column="rank" property="rank" jdbcType="INTEGER" />
    <result column="consume" property="consume" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="INTEGER" />
    <result column="travel" property="travel" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="createuser" property="createuser" jdbcType="VARCHAR" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="updateuser" property="updateuser" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    meal_rank_id, meal_id, rank, consume, comment, travel, createtime, createuser, updatetime, 
    updateuser
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.duantuke.basic.po.MealRankExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from meal_rank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from meal_rank
    where meal_rank_id = #{mealRankId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from meal_rank
    where meal_rank_id = #{mealRankId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.duantuke.basic.po.MealRankExample" >
    delete from meal_rank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duantuke.basic.po.MealRank" >
    insert into meal_rank (meal_rank_id, meal_id, rank, 
      consume, comment, travel, 
      createtime, createuser, updatetime, 
      updateuser)
    values (#{mealRankId,jdbcType=BIGINT}, #{mealId,jdbcType=BIGINT}, #{rank,jdbcType=INTEGER}, 
      #{consume,jdbcType=INTEGER}, #{comment,jdbcType=INTEGER}, #{travel,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{createuser,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{updateuser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.duantuke.basic.po.MealRank" >
    insert into meal_rank
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mealRankId != null" >
        meal_rank_id,
      </if>
      <if test="mealId != null" >
        meal_id,
      </if>
      <if test="rank != null" >
        rank,
      </if>
      <if test="consume != null" >
        consume,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="travel != null" >
        travel,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="createuser != null" >
        createuser,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="updateuser != null" >
        updateuser,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mealRankId != null" >
        #{mealRankId,jdbcType=BIGINT},
      </if>
      <if test="mealId != null" >
        #{mealId,jdbcType=BIGINT},
      </if>
      <if test="rank != null" >
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="consume != null" >
        #{consume,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=INTEGER},
      </if>
      <if test="travel != null" >
        #{travel,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null" >
        #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null" >
        #{updateuser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duantuke.basic.po.MealRankExample" resultType="java.lang.Integer" >
    select count(*) from meal_rank
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update meal_rank
    <set >
      <if test="record.mealRankId != null" >
        meal_rank_id = #{record.mealRankId,jdbcType=BIGINT},
      </if>
      <if test="record.mealId != null" >
        meal_id = #{record.mealId,jdbcType=BIGINT},
      </if>
      <if test="record.rank != null" >
        rank = #{record.rank,jdbcType=INTEGER},
      </if>
      <if test="record.consume != null" >
        consume = #{record.consume,jdbcType=INTEGER},
      </if>
      <if test="record.comment != null" >
        comment = #{record.comment,jdbcType=INTEGER},
      </if>
      <if test="record.travel != null" >
        travel = #{record.travel,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createuser != null" >
        createuser = #{record.createuser,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateuser != null" >
        updateuser = #{record.updateuser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update meal_rank
    set meal_rank_id = #{record.mealRankId,jdbcType=BIGINT},
      meal_id = #{record.mealId,jdbcType=BIGINT},
      rank = #{record.rank,jdbcType=INTEGER},
      consume = #{record.consume,jdbcType=INTEGER},
      comment = #{record.comment,jdbcType=INTEGER},
      travel = #{record.travel,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      createuser = #{record.createuser,jdbcType=VARCHAR},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      updateuser = #{record.updateuser,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duantuke.basic.po.MealRank" >
    update meal_rank
    <set >
      <if test="mealId != null" >
        meal_id = #{mealId,jdbcType=BIGINT},
      </if>
      <if test="rank != null" >
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="consume != null" >
        consume = #{consume,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        comment = #{comment,jdbcType=INTEGER},
      </if>
      <if test="travel != null" >
        travel = #{travel,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null" >
        createuser = #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null" >
        updateuser = #{updateuser,jdbcType=VARCHAR},
      </if>
    </set>
    where meal_rank_id = #{mealRankId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duantuke.basic.po.MealRank" >
    update meal_rank
    set meal_id = #{mealId,jdbcType=BIGINT},
      rank = #{rank,jdbcType=INTEGER},
      consume = #{consume,jdbcType=INTEGER},
      comment = #{comment,jdbcType=INTEGER},
      travel = #{travel,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      createuser = #{createuser,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      updateuser = #{updateuser,jdbcType=VARCHAR}
    where meal_rank_id = #{mealRankId,jdbcType=BIGINT}
  </update>
</mapper>