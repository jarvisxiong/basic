<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.duantuke.basic.mappers.PersonalTailorMapper" >
  <resultMap id="BaseResultMap" type="com.duantuke.basic.po.PersonalTailor" >
    <id column="personal_tailor_id" property="personalTailorId" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="starting" property="starting" jdbcType="VARCHAR" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="howlong" property="howlong" jdbcType="INTEGER" />
    <result column="fromdate" property="fromdate" jdbcType="TIMESTAMP" />
    <result column="schedule" property="schedule" jdbcType="VARCHAR" />
    <result column="memo" property="memo" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="budget" property="budget" jdbcType="DECIMAL" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="contact_phone" property="contactPhone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    personal_tailor_id, type, starting, destination, howlong, fromdate, schedule, memo, 
    number, budget, contact, contact_phone, email, create_time, create_by, update_time, 
    update_by
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.duantuke.basic.po.PersonalTailorExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from personal_tailor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart >=0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from personal_tailor
    where personal_tailor_id = #{personalTailorId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from personal_tailor
    where personal_tailor_id = #{personalTailorId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.duantuke.basic.po.PersonalTailorExample" >
    delete from personal_tailor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.duantuke.basic.po.PersonalTailor" >
    insert into personal_tailor (personal_tailor_id, type, starting, 
      destination, howlong, fromdate, 
      schedule, memo, number, 
      budget, contact, contact_phone, 
      email, create_time, create_by, 
      update_time, update_by)
    values (#{personalTailorId,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{starting,jdbcType=VARCHAR}, 
      #{destination,jdbcType=VARCHAR}, #{howlong,jdbcType=INTEGER}, #{fromdate,jdbcType=TIMESTAMP}, 
      #{schedule,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER}, 
      #{budget,jdbcType=DECIMAL}, #{contact,jdbcType=VARCHAR}, #{contactPhone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{createBy,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.duantuke.basic.po.PersonalTailor" >
    insert into personal_tailor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="personalTailorId != null" >
        personal_tailor_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="starting != null" >
        starting,
      </if>
      <if test="destination != null" >
        destination,
      </if>
      <if test="howlong != null" >
        howlong,
      </if>
      <if test="fromdate != null" >
        fromdate,
      </if>
      <if test="schedule != null" >
        schedule,
      </if>
      <if test="memo != null" >
        memo,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="budget != null" >
        budget,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="contactPhone != null" >
        contact_phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateBy != null" >
        update_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="personalTailorId != null" >
        #{personalTailorId,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="starting != null" >
        #{starting,jdbcType=VARCHAR},
      </if>
      <if test="destination != null" >
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="howlong != null" >
        #{howlong,jdbcType=INTEGER},
      </if>
      <if test="fromdate != null" >
        #{fromdate,jdbcType=TIMESTAMP},
      </if>
      <if test="schedule != null" >
        #{schedule,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="budget != null" >
        #{budget,jdbcType=DECIMAL},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        #{updateBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.duantuke.basic.po.PersonalTailorExample" resultType="java.lang.Integer" >
    select count(*) from personal_tailor
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update personal_tailor
    <set >
      <if test="record.personalTailorId != null" >
        personal_tailor_id = #{record.personalTailorId,jdbcType=BIGINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.starting != null" >
        starting = #{record.starting,jdbcType=VARCHAR},
      </if>
      <if test="record.destination != null" >
        destination = #{record.destination,jdbcType=VARCHAR},
      </if>
      <if test="record.howlong != null" >
        howlong = #{record.howlong,jdbcType=INTEGER},
      </if>
      <if test="record.fromdate != null" >
        fromdate = #{record.fromdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.schedule != null" >
        schedule = #{record.schedule,jdbcType=VARCHAR},
      </if>
      <if test="record.memo != null" >
        memo = #{record.memo,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.budget != null" >
        budget = #{record.budget,jdbcType=DECIMAL},
      </if>
      <if test="record.contact != null" >
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.contactPhone != null" >
        contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateBy != null" >
        update_by = #{record.updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update personal_tailor
    set personal_tailor_id = #{record.personalTailorId,jdbcType=BIGINT},
      type = #{record.type,jdbcType=INTEGER},
      starting = #{record.starting,jdbcType=VARCHAR},
      destination = #{record.destination,jdbcType=VARCHAR},
      howlong = #{record.howlong,jdbcType=INTEGER},
      fromdate = #{record.fromdate,jdbcType=TIMESTAMP},
      schedule = #{record.schedule,jdbcType=VARCHAR},
      memo = #{record.memo,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=INTEGER},
      budget = #{record.budget,jdbcType=DECIMAL},
      contact = #{record.contact,jdbcType=VARCHAR},
      contact_phone = #{record.contactPhone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_by = #{record.updateBy,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.duantuke.basic.po.PersonalTailor" >
    update personal_tailor
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="starting != null" >
        starting = #{starting,jdbcType=VARCHAR},
      </if>
      <if test="destination != null" >
        destination = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="howlong != null" >
        howlong = #{howlong,jdbcType=INTEGER},
      </if>
      <if test="fromdate != null" >
        fromdate = #{fromdate,jdbcType=TIMESTAMP},
      </if>
      <if test="schedule != null" >
        schedule = #{schedule,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=INTEGER},
      </if>
      <if test="budget != null" >
        budget = #{budget,jdbcType=DECIMAL},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="contactPhone != null" >
        contact_phone = #{contactPhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where personal_tailor_id = #{personalTailorId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.duantuke.basic.po.PersonalTailor" >
    update personal_tailor
    set type = #{type,jdbcType=INTEGER},
      starting = #{starting,jdbcType=VARCHAR},
      destination = #{destination,jdbcType=VARCHAR},
      howlong = #{howlong,jdbcType=INTEGER},
      fromdate = #{fromdate,jdbcType=TIMESTAMP},
      schedule = #{schedule,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      budget = #{budget,jdbcType=DECIMAL},
      contact = #{contact,jdbcType=VARCHAR},
      contact_phone = #{contactPhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR}
    where personal_tailor_id = #{personalTailorId,jdbcType=BIGINT}
  </update>
</mapper>