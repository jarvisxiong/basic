<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fangbaba.basic.mappers.OtaRoomtypeMapper" >
  <resultMap id="BaseResultMap" type="com.fangbaba.basic.po.OtaRoomtype" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="hotelid" property="hotelid" jdbcType="BIGINT" />
    <result column="roomtypeid" property="roomtypeid" jdbcType="BIGINT" />
    <result column="isdeploy" property="isdeploy" jdbcType="INTEGER" />
    <result column="otatype" property="otatype" jdbcType="INTEGER" />
    <result column="hotelprice" property="hotelprice" jdbcType="DECIMAL" />
    <result column="saleprice" property="saleprice" jdbcType="DECIMAL" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="createuser" property="createuser" jdbcType="VARCHAR" />
    <result column="updatetime" property="updatetime" jdbcType="TIMESTAMP" />
    <result column="updateuser" property="updateuser" jdbcType="VARCHAR" />
    <result column="mark" property="mark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, hotelid, roomtypeid, isdeploy, otatype, hotelprice, saleprice, num, createtime, 
    createuser, updatetime, updateuser, mark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fangbaba.basic.po.OtaRoomtypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ota_roomtype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from ota_roomtype
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from ota_roomtype
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.fangbaba.basic.po.OtaRoomtypeExample" >
    delete from ota_roomtype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fangbaba.basic.po.OtaRoomtype" >
    insert into ota_roomtype (id, hotelid, roomtypeid, 
      isdeploy, otatype, hotelprice, 
      saleprice, num, createtime, 
      createuser, updatetime, updateuser, 
      mark)
    values (#{id,jdbcType=BIGINT}, #{hotelid,jdbcType=BIGINT}, #{roomtypeid,jdbcType=BIGINT}, 
      #{isdeploy,jdbcType=INTEGER}, #{otatype,jdbcType=INTEGER}, #{hotelprice,jdbcType=DECIMAL}, 
      #{saleprice,jdbcType=DECIMAL}, #{num,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{createuser,jdbcType=VARCHAR}, #{updatetime,jdbcType=TIMESTAMP}, #{updateuser,jdbcType=VARCHAR}, 
      #{mark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fangbaba.basic.po.OtaRoomtype" >
    insert into ota_roomtype
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="hotelid != null" >
        hotelid,
      </if>
      <if test="roomtypeid != null" >
        roomtypeid,
      </if>
      <if test="isdeploy != null" >
        isdeploy,
      </if>
      <if test="otatype != null" >
        otatype,
      </if>
      <if test="hotelprice != null" >
        hotelprice,
      </if>
      <if test="saleprice != null" >
        saleprice,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="createuser != null" >
        createuser,
      </if>
      <if test="updatetime != null" >
        updatetime,
      </if>
      <if test="updateuser != null" >
        updateuser,
      </if>
      <if test="mark != null" >
        mark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="hotelid != null" >
        #{hotelid,jdbcType=BIGINT},
      </if>
      <if test="roomtypeid != null" >
        #{roomtypeid,jdbcType=BIGINT},
      </if>
      <if test="isdeploy != null" >
        #{isdeploy,jdbcType=INTEGER},
      </if>
      <if test="otatype != null" >
        #{otatype,jdbcType=INTEGER},
      </if>
      <if test="hotelprice != null" >
        #{hotelprice,jdbcType=DECIMAL},
      </if>
      <if test="saleprice != null" >
        #{saleprice,jdbcType=DECIMAL},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null" >
        #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null" >
        #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="mark != null" >
        #{mark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fangbaba.basic.po.OtaRoomtypeExample" resultType="java.lang.Integer" >
    select count(*) from ota_roomtype
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ota_roomtype
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.hotelid != null" >
        hotelid = #{record.hotelid,jdbcType=BIGINT},
      </if>
      <if test="record.roomtypeid != null" >
        roomtypeid = #{record.roomtypeid,jdbcType=BIGINT},
      </if>
      <if test="record.isdeploy != null" >
        isdeploy = #{record.isdeploy,jdbcType=INTEGER},
      </if>
      <if test="record.otatype != null" >
        otatype = #{record.otatype,jdbcType=INTEGER},
      </if>
      <if test="record.hotelprice != null" >
        hotelprice = #{record.hotelprice,jdbcType=DECIMAL},
      </if>
      <if test="record.saleprice != null" >
        saleprice = #{record.saleprice,jdbcType=DECIMAL},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createuser != null" >
        createuser = #{record.createuser,jdbcType=VARCHAR},
      </if>
      <if test="record.updatetime != null" >
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateuser != null" >
        updateuser = #{record.updateuser,jdbcType=VARCHAR},
      </if>
      <if test="record.mark != null" >
        mark = #{record.mark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ota_roomtype
    set id = #{record.id,jdbcType=BIGINT},
      hotelid = #{record.hotelid,jdbcType=BIGINT},
      roomtypeid = #{record.roomtypeid,jdbcType=BIGINT},
      isdeploy = #{record.isdeploy,jdbcType=INTEGER},
      otatype = #{record.otatype,jdbcType=INTEGER},
      hotelprice = #{record.hotelprice,jdbcType=DECIMAL},
      saleprice = #{record.saleprice,jdbcType=DECIMAL},
      num = #{record.num,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      createuser = #{record.createuser,jdbcType=VARCHAR},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      updateuser = #{record.updateuser,jdbcType=VARCHAR},
      mark = #{record.mark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fangbaba.basic.po.OtaRoomtype" >
    update ota_roomtype
    <set >
      <if test="hotelid != null" >
        hotelid = #{hotelid,jdbcType=BIGINT},
      </if>
      <if test="roomtypeid != null" >
        roomtypeid = #{roomtypeid,jdbcType=BIGINT},
      </if>
      <if test="isdeploy != null" >
        isdeploy = #{isdeploy,jdbcType=INTEGER},
      </if>
      <if test="otatype != null" >
        otatype = #{otatype,jdbcType=INTEGER},
      </if>
      <if test="hotelprice != null" >
        hotelprice = #{hotelprice,jdbcType=DECIMAL},
      </if>
      <if test="saleprice != null" >
        saleprice = #{saleprice,jdbcType=DECIMAL},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createuser != null" >
        createuser = #{createuser,jdbcType=VARCHAR},
      </if>
      <if test="updatetime != null" >
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateuser != null" >
        updateuser = #{updateuser,jdbcType=VARCHAR},
      </if>
      <if test="mark != null" >
        mark = #{mark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fangbaba.basic.po.OtaRoomtype" >
    update ota_roomtype
    set hotelid = #{hotelid,jdbcType=BIGINT},
      roomtypeid = #{roomtypeid,jdbcType=BIGINT},
      isdeploy = #{isdeploy,jdbcType=INTEGER},
      otatype = #{otatype,jdbcType=INTEGER},
      hotelprice = #{hotelprice,jdbcType=DECIMAL},
      saleprice = #{saleprice,jdbcType=DECIMAL},
      num = #{num,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      createuser = #{createuser,jdbcType=VARCHAR},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      updateuser = #{updateuser,jdbcType=VARCHAR},
      mark = #{mark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>